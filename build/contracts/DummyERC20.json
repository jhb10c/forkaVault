{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/johnbergschneider/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "11": "interfaces/IERC20.sol",
    "6": "/Users/johnbergschneider/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "8": "contracts/DummyERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/DummyERC20.sol",
    "exportedSymbols": {
      "DummyERC20": [
        508
      ]
    },
    "id": 509,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:8"
      },
      {
        "absolutePath": "/Users/johnbergschneider/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 2918,
        "src": "58:79:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "interfaces/IERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 2996,
        "src": "138:31:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/johnbergschneider/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 2895,
        "src": "170:79:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2917,
              "src": "1437:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$2917",
                "typeString": "contract Context"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "1437:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2995,
              "src": "1446:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2995",
                "typeString": "contract IERC20"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "1446:6:8"
          }
        ],
        "contractDependencies": [
          2917,
          2995
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "251:1162:8",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 508,
        "linearizedBaseContracts": [
          508,
          2995,
          2917
        ],
        "name": "DummyERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "contractScope": null,
              "id": 10,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2894,
              "src": "1465:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2894",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1459:27:8",
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1478:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 508,
            "src": "1492:46:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1501:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1492:28:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 14,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1512:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 508,
            "src": "1545:69:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1554:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1545:49:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 20,
                "keyType": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1574:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1565:28:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 19,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1585:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 508,
            "src": "1621:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1621:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 508,
            "src": "1656:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 25,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1656:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 508,
            "src": "1682:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 27,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1682:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 30,
            "mutability": "mutable",
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 508,
            "src": "1710:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 29,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1710:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "2120:117:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2130:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2138:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2130:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "2130:13:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2153:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 43,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2163:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2153:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "2153:17:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2180:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2192:2:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "2180:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:14:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2210:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2210:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3130303030303030",
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2221:8:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000_by_1",
                          "typeString": "int_const 10000000"
                        },
                        "value": "10000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000_by_1",
                          "typeString": "int_const 10000000"
                        }
                      ],
                      "id": 50,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "2204:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2204:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:26:8"
                }
              ]
            },
            "documentation": {
              "id": 31,
              "nodeType": "StructuredDocumentation",
              "src": "1740:311:8",
              "text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 57,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 57,
                  "src": "2069:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2069:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 57,
                  "src": "2090:21:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2068:44:8"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2120:0:8"
            },
            "scope": 508,
            "src": "2056:181:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "2362:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 63,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "2379:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 62,
                  "id": 64,
                  "nodeType": "Return",
                  "src": "2372:12:8"
                }
              ]
            },
            "documentation": {
              "id": 58,
              "nodeType": "StructuredDocumentation",
              "src": "2243:54:8",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 66,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2315:2:8"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 66,
                  "src": "2347:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2346:15:8"
            },
            "scope": 508,
            "src": "2302:89:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "2566:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 72,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28,
                    "src": "2583:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 71,
                  "id": 73,
                  "nodeType": "Return",
                  "src": "2576:14:8"
                }
              ]
            },
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "2397:102:8",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 75,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2519:2:8"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 75,
                  "src": "2551:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2550:15:8"
            },
            "scope": 508,
            "src": "2504:93:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "3276:33:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 81,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "3293:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 80,
                  "id": 82,
                  "nodeType": "Return",
                  "src": "3286:16:8"
                }
              ]
            },
            "documentation": {
              "id": 76,
              "nodeType": "StructuredDocumentation",
              "src": "2603:612:8",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3237:2:8"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 84,
                  "src": "3269:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3269:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3268:7:8"
            },
            "scope": 508,
            "src": "3220:89:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2926
            ],
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "3439:36:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24,
                    "src": "3456:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 92,
                  "nodeType": "Return",
                  "src": "3449:19:8"
                }
              ]
            },
            "documentation": {
              "id": 85,
              "nodeType": "StructuredDocumentation",
              "src": "3315:49:8",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 87,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3412:8:8"
            },
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3389:2:8"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 94,
                  "src": "3430:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3430:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3429:9:8"
            },
            "scope": 508,
            "src": "3369:106:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2934
            ],
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "3616:42:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "3633:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 105,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "3643:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3633:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102,
                  "id": 106,
                  "nodeType": "Return",
                  "src": "3626:25:8"
                }
              ]
            },
            "documentation": {
              "id": 95,
              "nodeType": "StructuredDocumentation",
              "src": "3481:47:8",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 99,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3589:8:8"
            },
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 108,
                  "src": "3552:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3552:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3551:17:8"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 108,
                  "src": "3607:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3607:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3606:9:8"
            },
            "scope": 508,
            "src": "3533:125:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2944
            ],
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "3953:80:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 120,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2905,
                          "src": "3973:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3973:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "3987:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "3998:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 119,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 329,
                      "src": "3963:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3963:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "3963:42:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4022:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 118,
                  "id": 127,
                  "nodeType": "Return",
                  "src": "4015:11:8"
                }
              ]
            },
            "documentation": {
              "id": 109,
              "nodeType": "StructuredDocumentation",
              "src": "3664:192:8",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 115,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3929:8:8"
            },
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 129,
                  "src": "3879:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3879:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 129,
                  "src": "3898:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3898:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3878:35:8"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 129,
                  "src": "3947:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3947:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3946:6:8"
            },
            "scope": 508,
            "src": "3861:172:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2954
            ],
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "4189:51:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "4206:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "4218:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4206:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 144,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "4225:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4206:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 139,
                  "id": 145,
                  "nodeType": "Return",
                  "src": "4199:34:8"
                }
              ]
            },
            "documentation": {
              "id": 130,
              "nodeType": "StructuredDocumentation",
              "src": "4039:47:8",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 136,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4162:8:8"
            },
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "4110:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4110:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "4125:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4125:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4109:32:8"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "4180:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4180:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4179:9:8"
            },
            "scope": 508,
            "src": "4091:149:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2964
            ],
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "4467:77:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 159,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2905,
                          "src": "4486:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4486:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "4500:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "4509:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 158,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "4477:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4477:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:39:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4533:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 157,
                  "id": 166,
                  "nodeType": "Return",
                  "src": "4526:11:8"
                }
              ]
            },
            "documentation": {
              "id": 148,
              "nodeType": "StructuredDocumentation",
              "src": "4246:127:8",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4443:8:8"
            },
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 168,
                  "src": "4395:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4395:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 168,
                  "src": "4412:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4412:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4394:33:8"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 168,
                  "src": "4461:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4461:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4460:6:8"
            },
            "scope": 508,
            "src": "4378:166:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2976
            ],
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "5123:205:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "5143:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 183,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "5151:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "5162:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 181,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 329,
                      "src": "5133:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5133:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "5133:36:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "5188:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 189,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2905,
                          "src": "5196:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5196:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 198,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "5248:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5256:42:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            },
                            "value": "ERC20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 191,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "5210:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 193,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 192,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 171,
                                "src": "5222:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5210:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 196,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 194,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2905,
                                "src": "5230:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5230:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5210:33:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2845,
                          "src": "5210:37:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5210:89:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 187,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "5179:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5179:121:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "5179:121:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5317:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 180,
                  "id": 204,
                  "nodeType": "Return",
                  "src": "5310:11:8"
                }
              ]
            },
            "documentation": {
              "id": 169,
              "nodeType": "StructuredDocumentation",
              "src": "4550:456:8",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 177,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5099:8:8"
            },
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "5033:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5033:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "5049:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5049:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "5068:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5068:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5032:51:8"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "5117:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5117:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5116:6:8"
            },
            "scope": 508,
            "src": "5011:317:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "5817:121:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 217,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2905,
                          "src": "5836:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5836:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "5850:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 227,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "5898:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 220,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "5859:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 223,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 221,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2905,
                                  "src": "5871:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5871:12:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5859:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 225,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 224,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 209,
                              "src": "5885:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5859:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2721,
                          "src": "5859:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5859:50:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 216,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "5827:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5827:83:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "5827:83:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5927:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 215,
                  "id": 232,
                  "nodeType": "Return",
                  "src": "5920:11:8"
                }
              ]
            },
            "documentation": {
              "id": 207,
              "nodeType": "StructuredDocumentation",
              "src": "5334:384:8",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 234,
                  "src": "5750:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5750:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 234,
                  "src": "5767:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5767:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5749:37:8"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 234,
                  "src": "5811:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5811:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5810:6:8"
            },
            "scope": 508,
            "src": "5723:215:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "6524:167:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 245,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2905,
                          "src": "6543:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6543:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 247,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "6557:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 255,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "6605:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6622:39:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            },
                            "value": "ERC20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 248,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "6566:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 251,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 249,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2905,
                                  "src": "6578:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6578:12:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6566:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 253,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 252,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "6592:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6566:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2845,
                          "src": "6566:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6566:96:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 244,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "6534:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6534:129:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "6534:129:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6680:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 243,
                  "id": 261,
                  "nodeType": "Return",
                  "src": "6673:11:8"
                }
              ]
            },
            "documentation": {
              "id": 235,
              "nodeType": "StructuredDocumentation",
              "src": "5944:476:8",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 263,
                  "src": "6452:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6452:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 263,
                  "src": "6469:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6469:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6451:42:8"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 263,
                  "src": "6518:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6518:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6517:6:8"
            },
            "scope": 508,
            "src": "6425:266:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "7252:443:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 274,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "7270:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7288:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7280:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 275,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7280:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7280:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7270:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7292:39:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7262:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7262:70:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "7262:70:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 284,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "7350:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7371:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7363:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 285,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7363:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7363:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7350:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7375:37:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7342:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7342:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "7342:71:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 294,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "7445:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "7453:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "7464:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 293,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "7424:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7424:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "7424:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 299,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "7482:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 301,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 300,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "7492:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7482:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 306,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "7524:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7532:40:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          },
                          "value": "ERC20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 302,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "7502:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 304,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 303,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "7512:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7502:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2845,
                        "src": "7502:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7502:71:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7482:91:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "7482:91:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 311,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "7583:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 313,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 312,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "7593:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7583:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 318,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "7631:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 314,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "7606:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 316,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 315,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "7616:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7606:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2721,
                        "src": "7606:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7606:32:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7583:55:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "7583:55:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 323,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "7662:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 324,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "7670:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "7681:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 322,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2985,
                      "src": "7653:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 327,
                  "nodeType": "EmitStatement",
                  "src": "7648:40:8"
                }
              ]
            },
            "documentation": {
              "id": 264,
              "nodeType": "StructuredDocumentation",
              "src": "6697:463:8",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 329,
                  "src": "7184:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7184:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 329,
                  "src": "7200:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7200:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 329,
                  "src": "7219:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7219:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7183:51:8"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7252:0:8"
            },
            "scope": 508,
            "src": "7165:530:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "8031:305:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 338,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "8049:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8068:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8060:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 339,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8060:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8060:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8049:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8072:33:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8041:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8041:65:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "8041:65:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8146:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8138:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 348,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8138:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8138:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 352,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "8150:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "8159:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 347,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "8117:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8117:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "8117:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 356,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "8177:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "8209:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 357,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "8192:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2721,
                        "src": "8192:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8192:24:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8177:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "8177:39:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "8226:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 365,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "8236:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8226:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 370,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "8270:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 366,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "8247:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 368,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "8257:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8247:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2721,
                        "src": "8247:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8247:30:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8226:51:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "8226:51:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8309:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8301:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 375,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8301:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8301:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 379,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "8313:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "8322:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 374,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2985,
                      "src": "8292:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8292:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "EmitStatement",
                  "src": "8287:42:8"
                }
              ]
            },
            "documentation": {
              "id": 330,
              "nodeType": "StructuredDocumentation",
              "src": "7701:260:8",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
            },
            "id": 384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 384,
                  "src": "7981:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7981:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 384,
                  "src": "7998:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7998:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7980:33:8"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8031:0:8"
            },
            "scope": 508,
            "src": "7966:370:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "8721:345:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 393,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "8739:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8758:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8750:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 394,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8750:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8750:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8739:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8762:35:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8731:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8731:67:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "8731:67:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "8830:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8847:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8839:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 404,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8839:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8839:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 408,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "8851:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 402,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "8809:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8809:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "8809:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 411,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "8869:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 413,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "8879:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8869:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 418,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 389,
                          "src": "8913:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8921:36:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          },
                          "value": "ERC20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 414,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "8890:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 416,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 415,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "8900:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8890:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2845,
                        "src": "8890:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8890:68:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8869:89:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "8869:89:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 423,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "8968:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 426,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 389,
                          "src": "9000:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 424,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "8983:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2743,
                        "src": "8983:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8983:24:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8968:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "8968:39:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "9031:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9048:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9040:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 432,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9040:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9040:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "9052:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 430,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2985,
                      "src": "9022:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9022:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "EmitStatement",
                  "src": "9017:42:8"
                }
              ]
            },
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "8342:309:8",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 440,
                  "src": "8671:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8671:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 440,
                  "src": "8688:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8688:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8670:33:8"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8721:0:8"
            },
            "scope": 508,
            "src": "8656:410:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "9572:257:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 451,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 443,
                          "src": "9590:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9607:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9599:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 452,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9599:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9599:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9590:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9611:38:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9582:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9582:68:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "9582:68:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 461,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "9668:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9687:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9679:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9679:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9679:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9668:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9691:36:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9660:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9660:68:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "9660:68:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 470,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "9739:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 473,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 471,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 443,
                          "src": "9751:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9739:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 474,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 472,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "9758:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9739:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 475,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "9769:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9739:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "9739:36:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "9799:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "9806:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 481,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "9815:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 478,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2994,
                      "src": "9790:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9790:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "EmitStatement",
                  "src": "9785:37:8"
                }
              ]
            },
            "documentation": {
              "id": 441,
              "nodeType": "StructuredDocumentation",
              "src": "9072:412:8",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 485,
                  "src": "9507:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9507:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 485,
                  "src": "9522:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9522:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 485,
                  "src": "9539:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9539:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9506:48:8"
            },
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9572:0:8"
            },
            "scope": 508,
            "src": "9489:340:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 495,
              "nodeType": "Block",
              "src": "10210:38:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 491,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "10220:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 492,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "10232:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "10220:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "10220:21:8"
                }
              ]
            },
            "documentation": {
              "id": 486,
              "nodeType": "StructuredDocumentation",
              "src": "9835:312:8",
              "text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
            },
            "id": 496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setupDecimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 496,
                  "src": "10176:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10176:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10175:17:8"
            },
            "returnParameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10210:0:8"
            },
            "scope": 508,
            "src": "10152:96:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "10924:3:8",
              "statements": []
            },
            "documentation": {
              "id": 497,
              "nodeType": "StructuredDocumentation",
              "src": "10254:576:8",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 507,
                  "src": "10865:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10865:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 507,
                  "src": "10879:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10879:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 507,
                  "src": "10891:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10891:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10864:42:8"
            },
            "returnParameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10924:0:8"
            },
            "scope": 508,
            "src": "10835:92:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 509,
        "src": "1414:9515:8"
      }
    ],
    "src": "33:10896:8"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000e0338038062000e03833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405250508251620001b49150600390602085019062000365565b508051620001ca90600490602084019062000365565b506005805460ff19166012179055620001e73362989680620001ef565b505062000401565b6001600160a01b0382166200024b576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200025960008383620002fe565b62000275816002546200030360201b620005731790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002a89183906200057362000303821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b6000828201838110156200035e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003a857805160ff1916838001178555620003d8565b82800160010185558215620003d8579182015b82811115620003d8578251825591602001919060010190620003bb565b50620003e6929150620003ea565b5090565b5b80821115620003e65760008155600101620003eb565b6109f280620004116000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c6105d4565b84846105d8565b50600192915050565b60025490565b600061037f8484846106c4565b6103ef8461038b6105d4565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c96105d4565b6001600160a01b03168152602081019190915260400160002054919061081f565b6105d8565b5060019392505050565b60055460ff1690565b600061036361040f6105d4565b846103ea85600160006104206105d4565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610573565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d96105d4565b846103ea8560405180606001604052806025815260200161099860259139600160006105036105d4565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061081f565b60006103636105416105d4565b84846106c4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000828201838110156105cd576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b03831661061d5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106625760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107095760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b03821661074e5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6107598383836108b6565b61079681604051806060016040528060268152602001610901602691396001600160a01b038616600090815260208190526040902054919061081f565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107c59082610573565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108ae5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561087357818101518382015260200161085b565b50505050905090810190601f1680156108a05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212201523ec63d8c7e7532dc38c36d57d01818bd6088c8b1b650091ade56de9bf8bf164736f6c634300060c0033",
  "bytecodeSha1": "466249b14eff72b10002be8907cfb7d18f0d775f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "DummyERC20",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.add": {
          "33": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.sub": {
          "34": [
            5545,
            5551,
            true
          ]
        }
      },
      "11": {},
      "6": {},
      "8": {
        "DummyERC20._approve": {
          "29": [
            9590,
            9609,
            true
          ],
          "30": [
            9668,
            9689,
            true
          ]
        },
        "DummyERC20._transfer": {
          "31": [
            7270,
            7290,
            true
          ],
          "32": [
            7350,
            7373,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "SafeMath.add": {
          "14": [
            2794,
            2840
          ],
          "15": [
            2850,
            2858
          ]
        },
        "SafeMath.sub": {
          "27": [
            5537,
            5566
          ],
          "28": [
            5576,
            5588
          ]
        }
      },
      "11": {},
      "6": {
        "Context._msgSender": {
          "16": [
            678,
            695
          ]
        }
      },
      "8": {
        "DummyERC20._approve": {
          "17": [
            9582,
            9650
          ],
          "18": [
            9660,
            9728
          ],
          "19": [
            9739,
            9775
          ],
          "20": [
            9785,
            9822
          ]
        },
        "DummyERC20._transfer": {
          "21": [
            7262,
            7332
          ],
          "22": [
            7342,
            7413
          ],
          "23": [
            7424,
            7471
          ],
          "24": [
            7482,
            7573
          ],
          "25": [
            7583,
            7638
          ],
          "26": [
            7648,
            7688
          ]
        },
        "DummyERC20.allowance": {
          "13": [
            4199,
            4233
          ]
        },
        "DummyERC20.approve": {
          "1": [
            4477,
            4516
          ],
          "2": [
            4526,
            4537
          ]
        },
        "DummyERC20.balanceOf": {
          "9": [
            3626,
            3651
          ]
        },
        "DummyERC20.decimals": {
          "7": [
            3286,
            3302
          ]
        },
        "DummyERC20.decreaseAllowance": {
          "11": [
            6534,
            6663
          ]
        },
        "DummyERC20.increaseAllowance": {
          "8": [
            5827,
            5910
          ]
        },
        "DummyERC20.name": {
          "0": [
            2372,
            2384
          ]
        },
        "DummyERC20.symbol": {
          "10": [
            2576,
            2590
          ]
        },
        "DummyERC20.totalSupply": {
          "3": [
            3449,
            3468
          ]
        },
        "DummyERC20.transfer": {
          "12": [
            3963,
            4005
          ]
        },
        "DummyERC20.transferFrom": {
          "4": [
            5133,
            5169
          ],
          "5": [
            5179,
            5300
          ],
          "6": [
            5310,
            5321
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c6105d4565b84846105d8565b50600192915050565b60025490565b600061037f8484846106c4565b6103ef8461038b6105d4565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c96105d4565b6001600160a01b03168152602081019190915260400160002054919061081f565b6105d8565b5060019392505050565b60055460ff1690565b600061036361040f6105d4565b846103ea85600160006104206105d4565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610573565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d96105d4565b846103ea8560405180606001604052806025815260200161099860259139600160006105036105d4565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061081f565b60006103636105416105d4565b84846106c4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000828201838110156105cd576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b03831661061d5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106625760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107095760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b03821661074e5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6107598383836108b6565b61079681604051806060016040528060268152602001610901602691396001600160a01b038616600090815260208190526040902054919061081f565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107c59082610573565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108ae5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561087357818101518382015260200161085b565b50505050905090810190601f1680156108a05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212201523ec63d8c7e7532dc38c36d57d01818bd6088c8b1b650091ade56de9bf8bf164736f6c634300060c0033",
  "deployedSourceMap": "1414:9515:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2302:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4378:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4378:166:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3369:106;;;:::i;:::-;;;;;;;;;;;;;;;;5011:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5011:317:8;;;;;;;;;;;;;;;;;:::i;3220:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5723:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5723:215:8;;;;;;;;:::i;3533:125::-;;;;;;;;;;;;;;;;-1:-1:-1;3533:125:8;-1:-1:-1;;;;;3533:125:8;;:::i;2504:93::-;;;:::i;6425:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6425:266:8;;;;;;;;:::i;3861:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3861:172:8;;;;;;;;:::i;4091:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4091:149:8;;;;;;;;;;:::i;2302:89::-;2379:5;2372:12;;;;;;;;-1:-1:-1;;2372:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2347:13;;2372:12;;2379:5;;2372:12;;2379:5;2372:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2302:89;:::o;4378:166::-;4461:4;4477:39;4486:12;:10;:12::i;:::-;4500:7;4509:6;4477:8;:39::i;:::-;-1:-1:-1;4533:4:8;4378:166;;;;:::o;3369:106::-;3456:12;;3369:106;:::o;5011:317::-;5117:4;5133:36;5143:6;5151:9;5162:6;5133:9;:36::i;:::-;5179:121;5188:6;5196:12;:10;:12::i;:::-;5210:89;5248:6;5210:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5210:19:8;;;;;;:11;:19;;;;;;5230:12;:10;:12::i;:::-;-1:-1:-1;;;;;5210:33:8;;;;;;;;;;;;-1:-1:-1;5210:33:8;;;:89;:37;:89::i;:::-;5179:8;:121::i;:::-;-1:-1:-1;5317:4:8;5011:317;;;;;:::o;3220:89::-;3293:9;;;;3220:89;:::o;5723:215::-;5811:4;5827:83;5836:12;:10;:12::i;:::-;5850:7;5859:50;5898:10;5859:11;:25;5871:12;:10;:12::i;:::-;-1:-1:-1;;;;;5859:25:8;;;;;;;;;;;;;;;;;-1:-1:-1;5859:25:8;;;:34;;;;;;;;;;;:38;:50::i;3533:125::-;-1:-1:-1;;;;;3633:18:8;3607:7;3633:18;;;;;;;;;;;;3533:125::o;2504:93::-;2583:7;2576:14;;;;;;;;-1:-1:-1;;2576:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2551:13;;2576:14;;2583:7;;2576:14;;2583:7;2576:14;;;;;;;;;;;;;;;;;;;;;;;;6425:266;6518:4;6534:129;6543:12;:10;:12::i;:::-;6557:7;6566:96;6605:15;6566:96;;;;;;;;;;;;;;;;;:11;:25;6578:12;:10;:12::i;:::-;-1:-1:-1;;;;;6566:25:8;;;;;;;;;;;;;;;;;-1:-1:-1;6566:25:8;;;:34;;;;;;;;;;;:96;:38;:96::i;3861:172::-;3947:4;3963:42;3973:12;:10;:12::i;:::-;3987:9;3998:6;3963:9;:42::i;4091:149::-;-1:-1:-1;;;;;4206:18:8;;;4180:7;4206:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4091:149::o;2690:175:1:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:1:o;598:104:6:-;685:10;598:104;:::o;9489:340:8:-;-1:-1:-1;;;;;9590:19:8;;9582:68;;;;-1:-1:-1;;;9582:68:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9668:21:8;;9660:68;;;;-1:-1:-1;;;9660:68:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9739:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9790:32;;;;;;;;;;;;;;;;;9489:340;;;:::o;7165:530::-;-1:-1:-1;;;;;7270:20:8;;7262:70;;;;-1:-1:-1;;;7262:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7350:23:8;;7342:71;;;;-1:-1:-1;;;7342:71:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7424:47;7445:6;7453:9;7464:6;7424:20;:47::i;:::-;7502:71;7524:6;7502:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7502:17:8;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7482:17:8;;;:9;:17;;;;;;;;;;;:91;;;;7606:20;;;;;;;:32;;7631:6;7606:24;:32::i;:::-;-1:-1:-1;;;;;7583:20:8;;;:9;:20;;;;;;;;;;;;:55;;;;7653:35;;;;;;;7583:20;;7653:35;;;;;;;;;;;;;7165:530;;;:::o;5432:163:1:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:1;;;5432:163::o;10835:92:8:-;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1414,
    10929
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x5D4 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5D8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x81F JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x5D4 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x5D4 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x81F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x5D4 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x759 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x796 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x81F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7C5 SWAP1 DUP3 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x8AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x873 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x85B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212201523 0xEC PUSH4 0xD8C7E753 0x2D 0xC3 DUP13 CALLDATASIZE 0xD5 PUSH30 0x1818BD6088C8B1B650091ADE56DE9BF8BF164736F6C634300060C003300 ",
  "pcMap": {
    "0": {
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D9"
    },
    "53": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x205"
    },
    "64": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22B"
    },
    "75": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x233"
    },
    "86": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "88": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25F"
    },
    "97": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "98": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "99": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "105": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x28B"
    },
    "108": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "109": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA9"
    },
    "112": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMP",
      "path": "8"
    },
    "113": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "114": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "115": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "121": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12B"
    },
    "135": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "137": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "143": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16B"
    },
    "146": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "147": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "148": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "154": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x185"
    },
    "157": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "158": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "159": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "EQ",
      "path": "8"
    },
    "165": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BB"
    },
    "168": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "169": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "170": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1414,
        10929
      ],
      "op": "REVERT",
      "path": "8"
    },
    "174": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "175": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB6"
    },
    "178": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B9"
    },
    "181": {
      "fn": "DummyERC20.name",
      "jump": "i",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMP",
      "path": "8"
    },
    "182": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "183": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "185": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP1",
      "path": "8"
    },
    "186": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "187": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "189": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP1",
      "path": "8"
    },
    "190": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP3",
      "path": "8"
    },
    "191": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "192": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "193": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "194": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP2",
      "path": "8"
    },
    "195": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "196": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "ADD",
      "path": "8"
    },
    "197": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "198": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "199": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "200": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "201": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "202": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "203": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "204": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "205": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "206": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "ADD",
      "path": "8"
    },
    "207": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "208": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP6",
      "path": "8"
    },
    "209": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "ADD",
      "path": "8"
    },
    "210": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "211": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP1",
      "path": "8"
    },
    "212": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "213": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "214": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "216": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "217": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "218": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP2",
      "path": "8"
    },
    "219": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "LT",
      "path": "8"
    },
    "220": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "221": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF0"
    },
    "224": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "225": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP2",
      "path": "8"
    },
    "226": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP2",
      "path": "8"
    },
    "227": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "ADD",
      "path": "8"
    },
    "228": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "229": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "230": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP3",
      "path": "8"
    },
    "231": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "ADD",
      "path": "8"
    },
    "232": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "233": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "235": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "ADD",
      "path": "8"
    },
    "236": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD8"
    },
    "239": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMP",
      "path": "8"
    },
    "240": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "241": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "POP",
      "path": "8"
    },
    "242": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "POP",
      "path": "8"
    },
    "243": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "POP",
      "path": "8"
    },
    "244": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "POP",
      "path": "8"
    },
    "245": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "246": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "POP",
      "path": "8"
    },
    "247": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "248": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP2",
      "path": "8"
    },
    "249": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "ADD",
      "path": "8"
    },
    "250": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "251": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "253": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "AND",
      "path": "8"
    },
    "254": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP1",
      "path": "8"
    },
    "255": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "256": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11D"
    },
    "259": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "260": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP1",
      "path": "8"
    },
    "261": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP3",
      "path": "8"
    },
    "262": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SUB",
      "path": "8"
    },
    "263": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP1",
      "path": "8"
    },
    "264": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "265": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "267": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "268": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "270": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SUB",
      "path": "8"
    },
    "271": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "274": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "EXP",
      "path": "8"
    },
    "275": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SUB",
      "path": "8"
    },
    "276": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "NOT",
      "path": "8"
    },
    "277": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "AND",
      "path": "8"
    },
    "278": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP2",
      "path": "8"
    },
    "279": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "280": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "282": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "ADD",
      "path": "8"
    },
    "283": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "284": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "POP",
      "path": "8"
    },
    "285": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "286": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "POP",
      "path": "8"
    },
    "287": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "288": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "POP",
      "path": "8"
    },
    "289": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "POP",
      "path": "8"
    },
    "290": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "POP",
      "path": "8"
    },
    "291": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "293": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "294": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "DUP1",
      "path": "8"
    },
    "295": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "296": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SUB",
      "path": "8"
    },
    "297": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "298": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "RETURN",
      "path": "8"
    },
    "299": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "300": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x157"
    },
    "303": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "305": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "DUP1",
      "path": "8"
    },
    "306": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "307": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "SUB",
      "path": "8"
    },
    "308": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "310": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "DUP2",
      "path": "8"
    },
    "311": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "LT",
      "path": "8"
    },
    "312": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "313": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x141"
    },
    "316": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "317": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "319": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "DUP1",
      "path": "8"
    },
    "320": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "REVERT",
      "path": "8"
    },
    "321": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "322": {
      "op": "POP"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "DUP2",
      "path": "8"
    },
    "332": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "333": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "AND",
      "path": "8"
    },
    "334": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "335": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "337": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "ADD",
      "path": "8"
    },
    "338": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "339": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34F"
    },
    "342": {
      "fn": "DummyERC20.approve",
      "jump": "i",
      "offset": [
        4378,
        4544
      ],
      "op": "JUMP",
      "path": "8"
    },
    "343": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "344": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "346": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "DUP1",
      "path": "8"
    },
    "347": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "348": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "349": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "350": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "351": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "DUP3",
      "path": "8"
    },
    "352": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "353": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "354": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "355": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "DUP2",
      "path": "8"
    },
    "356": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "357": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "SUB",
      "path": "8"
    },
    "358": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "360": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "ADD",
      "path": "8"
    },
    "361": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "362": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "RETURN",
      "path": "8"
    },
    "363": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "364": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173"
    },
    "367": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x36C"
    },
    "370": {
      "fn": "DummyERC20.totalSupply",
      "jump": "i",
      "offset": [
        3369,
        3475
      ],
      "op": "JUMP",
      "path": "8"
    },
    "371": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "372": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "374": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "DUP1",
      "path": "8"
    },
    "375": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "376": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "377": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "DUP3",
      "path": "8"
    },
    "378": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "379": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "380": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "381": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "DUP2",
      "path": "8"
    },
    "382": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "383": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "SUB",
      "path": "8"
    },
    "384": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "386": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "ADD",
      "path": "8"
    },
    "387": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "388": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "RETURN",
      "path": "8"
    },
    "389": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "390": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x157"
    },
    "393": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "395": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "DUP1",
      "path": "8"
    },
    "396": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "397": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "SUB",
      "path": "8"
    },
    "398": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "400": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "DUP2",
      "path": "8"
    },
    "401": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "LT",
      "path": "8"
    },
    "402": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "403": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19B"
    },
    "406": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "407": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "409": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "DUP1",
      "path": "8"
    },
    "410": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "REVERT",
      "path": "8"
    },
    "411": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "412": {
      "op": "POP"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "419": {
      "op": "SHL"
    },
    "420": {
      "op": "SUB"
    },
    "421": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "DUP2",
      "path": "8"
    },
    "422": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "423": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "DUP2",
      "path": "8"
    },
    "424": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "AND",
      "path": "8"
    },
    "425": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "426": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "428": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "DUP2",
      "path": "8"
    },
    "429": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "ADD",
      "path": "8"
    },
    "430": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "431": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "432": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "433": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "AND",
      "path": "8"
    },
    "434": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "435": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "437": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "ADD",
      "path": "8"
    },
    "438": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "439": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x372"
    },
    "442": {
      "fn": "DummyERC20.transferFrom",
      "jump": "i",
      "offset": [
        5011,
        5328
      ],
      "op": "JUMP",
      "path": "8"
    },
    "443": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "444": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C3"
    },
    "447": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F9"
    },
    "450": {
      "fn": "DummyERC20.decimals",
      "jump": "i",
      "offset": [
        3220,
        3309
      ],
      "op": "JUMP",
      "path": "8"
    },
    "451": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "452": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "454": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "DUP1",
      "path": "8"
    },
    "455": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "456": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "458": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "459": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "460": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "AND",
      "path": "8"
    },
    "461": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "DUP3",
      "path": "8"
    },
    "462": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "463": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "464": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "465": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "DUP2",
      "path": "8"
    },
    "466": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "467": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "SUB",
      "path": "8"
    },
    "468": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "470": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "ADD",
      "path": "8"
    },
    "471": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "472": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "RETURN",
      "path": "8"
    },
    "473": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "474": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x157"
    },
    "477": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "479": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "DUP1",
      "path": "8"
    },
    "480": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "481": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "SUB",
      "path": "8"
    },
    "482": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "484": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "DUP2",
      "path": "8"
    },
    "485": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "LT",
      "path": "8"
    },
    "486": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "487": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EF"
    },
    "490": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "491": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "493": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "DUP1",
      "path": "8"
    },
    "494": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "REVERT",
      "path": "8"
    },
    "495": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "496": {
      "op": "POP"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "503": {
      "op": "SHL"
    },
    "504": {
      "op": "SUB"
    },
    "505": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "DUP2",
      "path": "8"
    },
    "506": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "507": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "AND",
      "path": "8"
    },
    "508": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "509": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "511": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "ADD",
      "path": "8"
    },
    "512": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "513": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x402"
    },
    "516": {
      "fn": "DummyERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5723,
        5938
      ],
      "op": "JUMP",
      "path": "8"
    },
    "517": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "518": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173"
    },
    "521": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "523": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "DUP1",
      "path": "8"
    },
    "524": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "525": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "SUB",
      "path": "8"
    },
    "526": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "528": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "DUP2",
      "path": "8"
    },
    "529": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "LT",
      "path": "8"
    },
    "530": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "531": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21B"
    },
    "534": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "535": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "537": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "DUP1",
      "path": "8"
    },
    "538": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "REVERT",
      "path": "8"
    },
    "539": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "540": {
      "op": "POP"
    },
    "541": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "548": {
      "op": "SHL"
    },
    "549": {
      "op": "SUB"
    },
    "550": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "AND",
      "path": "8"
    },
    "551": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x450"
    },
    "554": {
      "fn": "DummyERC20.balanceOf",
      "jump": "i",
      "offset": [
        3533,
        3658
      ],
      "op": "JUMP",
      "path": "8"
    },
    "555": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2504,
        2597
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "556": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2504,
        2597
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB6"
    },
    "559": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2504,
        2597
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x46B"
    },
    "562": {
      "fn": "DummyERC20.symbol",
      "jump": "i",
      "offset": [
        2504,
        2597
      ],
      "op": "JUMP",
      "path": "8"
    },
    "563": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "564": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x157"
    },
    "567": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "569": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "DUP1",
      "path": "8"
    },
    "570": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "571": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "SUB",
      "path": "8"
    },
    "572": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "574": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "DUP2",
      "path": "8"
    },
    "575": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "LT",
      "path": "8"
    },
    "576": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "577": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x249"
    },
    "580": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "581": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "583": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "DUP1",
      "path": "8"
    },
    "584": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "REVERT",
      "path": "8"
    },
    "585": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "op": "SUB"
    },
    "595": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "DUP2",
      "path": "8"
    },
    "596": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "597": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "AND",
      "path": "8"
    },
    "598": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "599": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "601": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "ADD",
      "path": "8"
    },
    "602": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "603": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4CC"
    },
    "606": {
      "fn": "DummyERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6425,
        6691
      ],
      "op": "JUMP",
      "path": "8"
    },
    "607": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "608": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x157"
    },
    "611": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "613": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "DUP1",
      "path": "8"
    },
    "614": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "615": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "SUB",
      "path": "8"
    },
    "616": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "618": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "DUP2",
      "path": "8"
    },
    "619": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "LT",
      "path": "8"
    },
    "620": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "621": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x275"
    },
    "624": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "625": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "627": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "DUP1",
      "path": "8"
    },
    "628": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "REVERT",
      "path": "8"
    },
    "629": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "630": {
      "op": "POP"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "op": "SUB"
    },
    "639": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "DUP2",
      "path": "8"
    },
    "640": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "641": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "AND",
      "path": "8"
    },
    "642": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "643": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "645": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "ADD",
      "path": "8"
    },
    "646": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "647": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x534"
    },
    "650": {
      "fn": "DummyERC20.transfer",
      "jump": "i",
      "offset": [
        3861,
        4033
      ],
      "op": "JUMP",
      "path": "8"
    },
    "651": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "652": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173"
    },
    "655": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "657": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "DUP1",
      "path": "8"
    },
    "658": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "659": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "SUB",
      "path": "8"
    },
    "660": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "662": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "DUP2",
      "path": "8"
    },
    "663": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "LT",
      "path": "8"
    },
    "664": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "665": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A1"
    },
    "668": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "669": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "671": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "DUP1",
      "path": "8"
    },
    "672": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "REVERT",
      "path": "8"
    },
    "673": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "674": {
      "op": "POP"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "681": {
      "op": "SHL"
    },
    "682": {
      "op": "SUB"
    },
    "683": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "DUP2",
      "path": "8"
    },
    "684": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "685": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "DUP2",
      "path": "8"
    },
    "686": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "AND",
      "path": "8"
    },
    "687": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "688": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "690": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "ADD",
      "path": "8"
    },
    "691": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "692": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "AND",
      "path": "8"
    },
    "693": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x548"
    },
    "696": {
      "fn": "DummyERC20.allowance",
      "jump": "i",
      "offset": [
        4091,
        4240
      ],
      "op": "JUMP",
      "path": "8"
    },
    "697": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "698": {
      "fn": "DummyERC20.name",
      "offset": [
        2379,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 0,
      "value": "0x3"
    },
    "700": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP1",
      "path": "8"
    },
    "701": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "702": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "704": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP1",
      "path": "8"
    },
    "705": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "706": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "708": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "710": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "714": {
      "op": "NOT"
    },
    "715": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "718": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "720": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP9",
      "path": "8"
    },
    "721": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "AND",
      "path": "8"
    },
    "722": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "723": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "MUL",
      "path": "8"
    },
    "724": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ADD",
      "path": "8"
    },
    "725": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "726": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "727": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "AND",
      "path": "8"
    },
    "728": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "729": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "730": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "731": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DIV",
      "path": "8"
    },
    "732": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "733": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP5",
      "path": "8"
    },
    "734": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ADD",
      "path": "8"
    },
    "735": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP2",
      "path": "8"
    },
    "736": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "737": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DIV",
      "path": "8"
    },
    "738": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP2",
      "path": "8"
    },
    "739": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "MUL",
      "path": "8"
    },
    "740": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP3",
      "path": "8"
    },
    "741": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ADD",
      "path": "8"
    },
    "742": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP2",
      "path": "8"
    },
    "743": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ADD",
      "path": "8"
    },
    "744": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "745": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "746": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "747": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP3",
      "path": "8"
    },
    "748": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP2",
      "path": "8"
    },
    "749": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "750": {
      "fn": "DummyERC20.name",
      "offset": [
        2347,
        2360
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "752": {
      "fn": "DummyERC20.name",
      "offset": [
        2347,
        2360
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "753": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "754": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "755": {
      "fn": "DummyERC20.name",
      "offset": [
        2379,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "756": {
      "fn": "DummyERC20.name",
      "offset": [
        2379,
        2384
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "757": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP4",
      "path": "8"
    },
    "758": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ADD",
      "path": "8"
    },
    "759": {
      "fn": "DummyERC20.name",
      "offset": [
        2379,
        2384
      ],
      "op": "DUP3",
      "path": "8"
    },
    "760": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP3",
      "path": "8"
    },
    "761": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP1",
      "path": "8"
    },
    "762": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "763": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x345"
    },
    "766": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "767": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP1",
      "path": "8"
    },
    "768": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "770": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "LT",
      "path": "8"
    },
    "771": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31A"
    },
    "774": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "775": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "778": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP1",
      "path": "8"
    },
    "779": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP4",
      "path": "8"
    },
    "780": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "781": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DIV",
      "path": "8"
    },
    "782": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "MUL",
      "path": "8"
    },
    "783": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP4",
      "path": "8"
    },
    "784": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "785": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "786": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "788": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ADD",
      "path": "8"
    },
    "789": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "790": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x345"
    },
    "793": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "JUMP",
      "path": "8"
    },
    "794": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "795": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP3",
      "path": "8"
    },
    "796": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ADD",
      "path": "8"
    },
    "797": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "798": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "799": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "801": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "802": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "804": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "806": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "807": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "808": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "809": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP2",
      "path": "8"
    },
    "810": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "811": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP2",
      "path": "8"
    },
    "812": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "813": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "814": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "816": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ADD",
      "path": "8"
    },
    "817": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "818": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "820": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ADD",
      "path": "8"
    },
    "821": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP1",
      "path": "8"
    },
    "822": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP4",
      "path": "8"
    },
    "823": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "GT",
      "path": "8"
    },
    "824": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x328"
    },
    "827": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "828": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP3",
      "path": "8"
    },
    "829": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "830": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SUB",
      "path": "8"
    },
    "831": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "833": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "AND",
      "path": "8"
    },
    "834": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "DUP3",
      "path": "8"
    },
    "835": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "ADD",
      "path": "8"
    },
    "836": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "837": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "838": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "POP",
      "path": "8"
    },
    "839": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "POP",
      "path": "8"
    },
    "840": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "POP",
      "path": "8"
    },
    "841": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "POP",
      "path": "8"
    },
    "842": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "POP",
      "path": "8"
    },
    "843": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "844": {
      "fn": "DummyERC20.name",
      "offset": [
        2372,
        2384
      ],
      "op": "POP",
      "path": "8"
    },
    "845": {
      "fn": "DummyERC20.name",
      "offset": [
        2302,
        2391
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "846": {
      "fn": "DummyERC20.name",
      "jump": "o",
      "offset": [
        2302,
        2391
      ],
      "op": "JUMP",
      "path": "8"
    },
    "847": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "848": {
      "fn": "DummyERC20.approve",
      "offset": [
        4461,
        4465
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "850": {
      "fn": "DummyERC20.approve",
      "offset": [
        4477,
        4516
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 1,
      "value": "0x363"
    },
    "853": {
      "fn": "DummyERC20.approve",
      "offset": [
        4486,
        4498
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x35C"
    },
    "856": {
      "fn": "DummyERC20.approve",
      "offset": [
        4486,
        4496
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D4"
    },
    "859": {
      "fn": "DummyERC20.approve",
      "jump": "i",
      "offset": [
        4486,
        4498
      ],
      "op": "JUMP",
      "path": "8"
    },
    "860": {
      "fn": "DummyERC20.approve",
      "offset": [
        4486,
        4498
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "861": {
      "fn": "DummyERC20.approve",
      "offset": [
        4500,
        4507
      ],
      "op": "DUP5",
      "path": "8"
    },
    "862": {
      "fn": "DummyERC20.approve",
      "offset": [
        4509,
        4515
      ],
      "op": "DUP5",
      "path": "8"
    },
    "863": {
      "fn": "DummyERC20.approve",
      "offset": [
        4477,
        4485
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D8"
    },
    "866": {
      "fn": "DummyERC20.approve",
      "jump": "i",
      "offset": [
        4477,
        4516
      ],
      "op": "JUMP",
      "path": "8"
    },
    "867": {
      "fn": "DummyERC20.approve",
      "offset": [
        4477,
        4516
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "868": {
      "op": "POP"
    },
    "869": {
      "fn": "DummyERC20.approve",
      "offset": [
        4533,
        4537
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x1"
    },
    "871": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "872": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "873": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "POP",
      "path": "8"
    },
    "874": {
      "fn": "DummyERC20.approve",
      "offset": [
        4378,
        4544
      ],
      "op": "POP",
      "path": "8"
    },
    "875": {
      "fn": "DummyERC20.approve",
      "jump": "o",
      "offset": [
        4378,
        4544
      ],
      "op": "JUMP",
      "path": "8"
    },
    "876": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "877": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3456,
        3468
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 3,
      "value": "0x2"
    },
    "879": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3456,
        3468
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "880": {
      "fn": "DummyERC20.totalSupply",
      "offset": [
        3369,
        3475
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "881": {
      "fn": "DummyERC20.totalSupply",
      "jump": "o",
      "offset": [
        3369,
        3475
      ],
      "op": "JUMP",
      "path": "8"
    },
    "882": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "883": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5117,
        5121
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "885": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5133,
        5169
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 4,
      "value": "0x37F"
    },
    "888": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5143,
        5149
      ],
      "op": "DUP5",
      "path": "8"
    },
    "889": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5151,
        5160
      ],
      "op": "DUP5",
      "path": "8"
    },
    "890": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5162,
        5168
      ],
      "op": "DUP5",
      "path": "8"
    },
    "891": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5133,
        5142
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6C4"
    },
    "894": {
      "fn": "DummyERC20.transferFrom",
      "jump": "i",
      "offset": [
        5133,
        5169
      ],
      "op": "JUMP",
      "path": "8"
    },
    "895": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5133,
        5169
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "896": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5179,
        5300
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 5,
      "value": "0x3EF"
    },
    "899": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5188,
        5194
      ],
      "op": "DUP5",
      "path": "8"
    },
    "900": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5196,
        5208
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x38B"
    },
    "903": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5196,
        5206
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D4"
    },
    "906": {
      "fn": "DummyERC20.transferFrom",
      "jump": "i",
      "offset": [
        5196,
        5208
      ],
      "op": "JUMP",
      "path": "8"
    },
    "907": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5196,
        5208
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "908": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3EA"
    },
    "911": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5248,
        5254
      ],
      "op": "DUP6",
      "path": "8"
    },
    "912": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "914": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "915": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "DUP1",
      "path": "8"
    },
    "916": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "918": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "ADD",
      "path": "8"
    },
    "919": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "921": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "922": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "DUP1",
      "path": "8"
    },
    "923": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x28"
    },
    "925": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "DUP2",
      "path": "8"
    },
    "926": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "927": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "929": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "ADD",
      "path": "8"
    },
    "930": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x927"
    },
    "933": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x28"
    },
    "935": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "936": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "SUB"
    },
    "945": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "DUP11",
      "path": "8"
    },
    "946": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "AND",
      "path": "8"
    },
    "947": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "949": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "950": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "DUP2",
      "path": "8"
    },
    "951": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "952": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5221
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "954": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "956": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "957": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "959": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "DUP2",
      "path": "8"
    },
    "960": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "961": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5229
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "962": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5230,
        5242
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C9"
    },
    "965": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5230,
        5240
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D4"
    },
    "968": {
      "fn": "DummyERC20.transferFrom",
      "jump": "i",
      "offset": [
        5230,
        5242
      ],
      "op": "JUMP",
      "path": "8"
    },
    "969": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5230,
        5242
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "976": {
      "op": "SHL"
    },
    "977": {
      "op": "SUB"
    },
    "978": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "AND",
      "path": "8"
    },
    "979": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "DUP2",
      "path": "8"
    },
    "980": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "981": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "983": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "DUP2",
      "path": "8"
    },
    "984": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "ADD",
      "path": "8"
    },
    "985": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "986": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "987": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "988": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "989": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "991": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "ADD",
      "path": "8"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "994": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "995": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "996": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5243
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "997": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "998": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5247
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x81F"
    },
    "1001": {
      "fn": "DummyERC20.transferFrom",
      "jump": "i",
      "offset": [
        5210,
        5299
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1002": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5210,
        5299
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1003": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5179,
        5187
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D8"
    },
    "1006": {
      "fn": "DummyERC20.transferFrom",
      "jump": "i",
      "offset": [
        5179,
        5300
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1007": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5179,
        5300
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5317,
        5321
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 6,
      "value": "0x1"
    },
    "1011": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1012": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1013": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "POP",
      "path": "8"
    },
    "1014": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "POP",
      "path": "8"
    },
    "1015": {
      "fn": "DummyERC20.transferFrom",
      "offset": [
        5011,
        5328
      ],
      "op": "POP",
      "path": "8"
    },
    "1016": {
      "fn": "DummyERC20.transferFrom",
      "jump": "o",
      "offset": [
        5011,
        5328
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1017": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1018": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3293,
        3302
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 7,
      "value": "0x5"
    },
    "1020": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3293,
        3302
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1021": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3293,
        3302
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1023": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3293,
        3302
      ],
      "op": "AND",
      "path": "8"
    },
    "1024": {
      "fn": "DummyERC20.decimals",
      "offset": [
        3220,
        3309
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1025": {
      "fn": "DummyERC20.decimals",
      "jump": "o",
      "offset": [
        3220,
        3309
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1026": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5723,
        5938
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1027": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5811,
        5815
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1029": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5827,
        5910
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 8,
      "value": "0x363"
    },
    "1032": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5836,
        5848
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x40F"
    },
    "1035": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5836,
        5846
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D4"
    },
    "1038": {
      "fn": "DummyERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5836,
        5848
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1039": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5836,
        5848
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1040": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5850,
        5857
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1041": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5909
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3EA"
    },
    "1044": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5898,
        5908
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1045": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5870
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1047": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1049": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5871,
        5883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x420"
    },
    "1052": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5871,
        5881
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D4"
    },
    "1055": {
      "fn": "DummyERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5871,
        5883
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1056": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5871,
        5883
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1066": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1067": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "AND",
      "path": "8"
    },
    "1068": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1069": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1070": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1072": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1073": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1074": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "ADD",
      "path": "8"
    },
    "1075": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1076": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1077": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1078": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1079": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1081": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1082": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1083": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "ADD",
      "path": "8"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1086": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1087": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1088": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5884
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1089": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1090": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "DUP13",
      "path": "8"
    },
    "1091": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "AND",
      "path": "8"
    },
    "1092": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1093": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1094": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1095": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1096": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1097": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1098": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1099": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5893
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1100": {
      "fn": "DummyERC20.increaseAllowance",
      "offset": [
        5859,
        5897
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x573"
    },
    "1103": {
      "fn": "DummyERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5859,
        5909
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1104": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3533,
        3658
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "AND",
      "path": "8",
      "statement": 9
    },
    "1114": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3607,
        3614
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1116": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1117": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1118": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1119": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1121": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1122": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1123": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1124": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1126": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1127": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1128": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1129": {
      "fn": "DummyERC20.balanceOf",
      "offset": [
        3633,
        3651
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1130": {
      "fn": "DummyERC20.balanceOf",
      "jump": "o",
      "offset": [
        3533,
        3658
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1131": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2504,
        2597
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1132": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2583,
        2590
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 10,
      "value": "0x4"
    },
    "1134": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1135": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1136": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1138": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1139": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1140": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1142": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1144": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1148": {
      "op": "NOT"
    },
    "1149": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "1152": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1154": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP9",
      "path": "8"
    },
    "1155": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "AND",
      "path": "8"
    },
    "1156": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1157": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "MUL",
      "path": "8"
    },
    "1158": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "ADD",
      "path": "8"
    },
    "1159": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1160": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "1161": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "AND",
      "path": "8"
    },
    "1162": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1163": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1164": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1165": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DIV",
      "path": "8"
    },
    "1166": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1167": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1168": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "ADD",
      "path": "8"
    },
    "1169": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1170": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1171": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DIV",
      "path": "8"
    },
    "1172": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1173": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "MUL",
      "path": "8"
    },
    "1174": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1175": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "ADD",
      "path": "8"
    },
    "1176": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1177": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "ADD",
      "path": "8"
    },
    "1178": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1179": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1180": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1181": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1182": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1183": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1184": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2551,
        2564
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "1186": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2551,
        2564
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1187": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1188": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1189": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2583,
        2590
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1190": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2583,
        2590
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1191": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1192": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "ADD",
      "path": "8"
    },
    "1193": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2583,
        2590
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1194": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1195": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1196": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1197": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x345"
    },
    "1200": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1201": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1202": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1204": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "LT",
      "path": "8"
    },
    "1205": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31A"
    },
    "1208": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1209": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "1212": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1213": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1214": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1215": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DIV",
      "path": "8"
    },
    "1216": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "MUL",
      "path": "8"
    },
    "1217": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1218": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1219": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1220": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1222": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "ADD",
      "path": "8"
    },
    "1223": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1224": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x345"
    },
    "1227": {
      "fn": "DummyERC20.symbol",
      "offset": [
        2576,
        2590
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1228": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6425,
        6691
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1229": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6518,
        6522
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1231": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6534,
        6663
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 11,
      "value": "0x363"
    },
    "1234": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6543,
        6555
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D9"
    },
    "1237": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6543,
        6553
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D4"
    },
    "1240": {
      "fn": "DummyERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6543,
        6555
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1241": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6543,
        6555
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1242": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6557,
        6564
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1243": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3EA"
    },
    "1246": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6605,
        6620
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1247": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1249": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1250": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1251": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "1253": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "ADD",
      "path": "8"
    },
    "1254": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1256": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1257": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1258": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x25"
    },
    "1260": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1261": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1262": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1264": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "ADD",
      "path": "8"
    },
    "1265": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x998"
    },
    "1268": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x25"
    },
    "1270": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1271": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "1272": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6577
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1274": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1276": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6578,
        6590
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x503"
    },
    "1279": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6578,
        6588
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D4"
    },
    "1282": {
      "fn": "DummyERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6578,
        6590
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1283": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6578,
        6590
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "op": "SUB"
    },
    "1292": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1293": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1294": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "AND",
      "path": "8"
    },
    "1295": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1296": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1297": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1299": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1300": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1301": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "ADD",
      "path": "8"
    },
    "1302": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1303": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1304": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1305": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1306": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1308": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1309": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1310": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "ADD",
      "path": "8"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1313": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1314": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1315": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6591
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1316": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1317": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "DUP14",
      "path": "8"
    },
    "1318": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "AND",
      "path": "8"
    },
    "1319": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1320": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1321": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1322": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1323": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1324": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1325": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1326": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6600
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1327": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6662
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1328": {
      "fn": "DummyERC20.decreaseAllowance",
      "offset": [
        6566,
        6604
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x81F"
    },
    "1331": {
      "fn": "DummyERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6566,
        6662
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1332": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3861,
        4033
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1333": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3947,
        3951
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1335": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3963,
        4005
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 12,
      "value": "0x363"
    },
    "1338": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3973,
        3985
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x541"
    },
    "1341": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3973,
        3983
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D4"
    },
    "1344": {
      "fn": "DummyERC20.transfer",
      "jump": "i",
      "offset": [
        3973,
        3985
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1345": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3973,
        3985
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1346": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3987,
        3996
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1347": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3998,
        4004
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1348": {
      "fn": "DummyERC20.transfer",
      "offset": [
        3963,
        3972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6C4"
    },
    "1351": {
      "fn": "DummyERC20.transfer",
      "jump": "i",
      "offset": [
        3963,
        4005
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1352": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4091,
        4240
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1359": {
      "op": "SHL"
    },
    "1360": {
      "op": "SUB"
    },
    "1361": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 13
    },
    "1362": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1363": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "AND",
      "path": "8"
    },
    "1364": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4180,
        4187
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1366": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1367": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1368": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1369": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4217
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1371": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1373": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1374": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1375": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1376": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1378": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1379": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1380": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4224
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1381": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1382": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1383": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1384": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "AND",
      "path": "8"
    },
    "1385": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1386": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1387": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1388": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1389": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1390": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1391": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1392": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1393": {
      "fn": "DummyERC20.allowance",
      "offset": [
        4206,
        4233
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1394": {
      "fn": "DummyERC20.allowance",
      "jump": "o",
      "offset": [
        4091,
        4240
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1395": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1396": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1398": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1399": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1400": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "1"
    },
    "1401": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 14
    },
    "1402": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1403": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "1"
    },
    "1404": {
      "branch": 33,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1405": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CD"
    },
    "1408": {
      "branch": 33,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1409": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1411": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1412": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1421": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1422": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1424": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1426": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1427": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "1428": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1429": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "1431": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1433": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1434": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "1435": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1436": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "1469": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1471": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1472": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "1473": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1474": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1475": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1476": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1477": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1478": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1479": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "1"
    },
    "1480": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1482": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "1483": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1484": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1485": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1486": {
      "fn": "SafeMath.add",
      "offset": [
        2857,
        2858
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 15
    },
    "1487": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "op": "POP"
    },
    "1490": {
      "op": "POP"
    },
    "1491": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1492": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1493": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 16
    },
    "1494": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1495": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1496": {
      "fn": "DummyERC20._approve",
      "offset": [
        9489,
        9829
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1503": {
      "op": "SHL"
    },
    "1504": {
      "op": "SUB"
    },
    "1505": {
      "fn": "DummyERC20._approve",
      "offset": [
        9590,
        9609
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 17
    },
    "1506": {
      "branch": 29,
      "fn": "DummyERC20._approve",
      "offset": [
        9590,
        9609
      ],
      "op": "AND",
      "path": "8"
    },
    "1507": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x61D"
    },
    "1510": {
      "branch": 29,
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1511": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1513": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1514": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1520": {
      "op": "SHL"
    },
    "1521": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1522": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1523": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1525": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "ADD",
      "path": "8"
    },
    "1526": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1527": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1528": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1530": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "ADD",
      "path": "8"
    },
    "1531": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1532": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1533": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "SUB",
      "path": "8"
    },
    "1534": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1535": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1536": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "1538": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1539": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1540": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1542": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "ADD",
      "path": "8"
    },
    "1543": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1544": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x974"
    },
    "1547": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "1549": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1550": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "1551": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1553": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "ADD",
      "path": "8"
    },
    "1554": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1555": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "POP",
      "path": "8"
    },
    "1556": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "POP",
      "path": "8"
    },
    "1557": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1559": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1560": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1561": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1562": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "SUB",
      "path": "8"
    },
    "1563": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1564": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1565": {
      "fn": "DummyERC20._approve",
      "offset": [
        9582,
        9650
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "SUB"
    },
    "1574": {
      "fn": "DummyERC20._approve",
      "offset": [
        9668,
        9689
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 18
    },
    "1575": {
      "branch": 30,
      "fn": "DummyERC20._approve",
      "offset": [
        9668,
        9689
      ],
      "op": "AND",
      "path": "8"
    },
    "1576": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x662"
    },
    "1579": {
      "branch": 30,
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1580": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1582": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1589": {
      "op": "SHL"
    },
    "1590": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1591": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1592": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1594": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "ADD",
      "path": "8"
    },
    "1595": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1596": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1597": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1599": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "ADD",
      "path": "8"
    },
    "1600": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1601": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1602": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "SUB",
      "path": "8"
    },
    "1603": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1604": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1605": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x22"
    },
    "1607": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1608": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1609": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1611": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "ADD",
      "path": "8"
    },
    "1612": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1613": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8DF"
    },
    "1616": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x22"
    },
    "1618": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1619": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "1620": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1622": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "ADD",
      "path": "8"
    },
    "1623": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1624": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "POP",
      "path": "8"
    },
    "1625": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "POP",
      "path": "8"
    },
    "1626": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1628": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1629": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1630": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1631": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "SUB",
      "path": "8"
    },
    "1632": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1633": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1634": {
      "fn": "DummyERC20._approve",
      "offset": [
        9660,
        9728
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "SUB"
    },
    "1643": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 19
    },
    "1644": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1645": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "AND",
      "path": "8"
    },
    "1646": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1648": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1649": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1650": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1651": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9750
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1653": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1655": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1656": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1657": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1658": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1660": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1661": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1662": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9757
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1663": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1664": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1665": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "AND",
      "path": "8"
    },
    "1666": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1667": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1668": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1669": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1670": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1671": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1672": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1673": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1674": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1675": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9766
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1676": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9775
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1677": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9775
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1678": {
      "fn": "DummyERC20._approve",
      "offset": [
        9739,
        9775
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1679": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 20
    },
    "1680": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1681": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1682": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1683": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1684": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1685": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1686": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1719": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1720": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1721": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1722": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "SUB",
      "path": "8"
    },
    "1723": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1724": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1725": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "ADD",
      "path": "8"
    },
    "1726": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1727": {
      "fn": "DummyERC20._approve",
      "offset": [
        9790,
        9822
      ],
      "op": "LOG3",
      "path": "8"
    },
    "1728": {
      "fn": "DummyERC20._approve",
      "offset": [
        9489,
        9829
      ],
      "op": "POP",
      "path": "8"
    },
    "1729": {
      "fn": "DummyERC20._approve",
      "offset": [
        9489,
        9829
      ],
      "op": "POP",
      "path": "8"
    },
    "1730": {
      "fn": "DummyERC20._approve",
      "offset": [
        9489,
        9829
      ],
      "op": "POP",
      "path": "8"
    },
    "1731": {
      "fn": "DummyERC20._approve",
      "jump": "o",
      "offset": [
        9489,
        9829
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1732": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7165,
        7695
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1739": {
      "op": "SHL"
    },
    "1740": {
      "op": "SUB"
    },
    "1741": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7270,
        7290
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 21
    },
    "1742": {
      "branch": 31,
      "fn": "DummyERC20._transfer",
      "offset": [
        7270,
        7290
      ],
      "op": "AND",
      "path": "8"
    },
    "1743": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x709"
    },
    "1746": {
      "branch": 31,
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1747": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1749": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1750": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1756": {
      "op": "SHL"
    },
    "1757": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1758": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1759": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1761": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "ADD",
      "path": "8"
    },
    "1762": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1763": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1764": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1766": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "ADD",
      "path": "8"
    },
    "1767": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1768": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1769": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "SUB",
      "path": "8"
    },
    "1770": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1771": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1772": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x25"
    },
    "1774": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1775": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1776": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1778": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "ADD",
      "path": "8"
    },
    "1779": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1780": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x94F"
    },
    "1783": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x25"
    },
    "1785": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1786": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "1787": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1789": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "ADD",
      "path": "8"
    },
    "1790": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1791": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "POP",
      "path": "8"
    },
    "1792": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "POP",
      "path": "8"
    },
    "1793": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1795": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1796": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1797": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1798": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "SUB",
      "path": "8"
    },
    "1799": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1800": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1801": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7262,
        7332
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "op": "SUB"
    },
    "1810": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7350,
        7373
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 22
    },
    "1811": {
      "branch": 32,
      "fn": "DummyERC20._transfer",
      "offset": [
        7350,
        7373
      ],
      "op": "AND",
      "path": "8"
    },
    "1812": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x74E"
    },
    "1815": {
      "branch": 32,
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1816": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1818": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1827": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1828": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1830": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "ADD",
      "path": "8"
    },
    "1831": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1832": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1833": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1835": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "ADD",
      "path": "8"
    },
    "1836": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1837": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1838": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "SUB",
      "path": "8"
    },
    "1839": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1840": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1841": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x23"
    },
    "1843": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1844": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1845": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1847": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "ADD",
      "path": "8"
    },
    "1848": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1849": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8BC"
    },
    "1852": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x23"
    },
    "1854": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1855": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "1856": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1858": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "ADD",
      "path": "8"
    },
    "1859": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1860": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "POP",
      "path": "8"
    },
    "1861": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "POP",
      "path": "8"
    },
    "1862": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1864": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1865": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1866": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1867": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "SUB",
      "path": "8"
    },
    "1868": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1869": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1870": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7342,
        7413
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1871": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7424,
        7471
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 23,
      "value": "0x759"
    },
    "1874": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7445,
        7451
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1875": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7453,
        7462
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1876": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7464,
        7470
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1877": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7424,
        7444
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8B6"
    },
    "1880": {
      "fn": "DummyERC20._transfer",
      "jump": "i",
      "offset": [
        7424,
        7471
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1881": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7424,
        7471
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1882": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 24,
      "value": "0x796"
    },
    "1885": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7524,
        7530
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1886": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1888": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1889": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1890": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "1892": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "ADD",
      "path": "8"
    },
    "1893": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1895": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1896": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1897": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x26"
    },
    "1899": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1900": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1901": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1903": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "ADD",
      "path": "8"
    },
    "1904": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x901"
    },
    "1907": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x26"
    },
    "1909": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1910": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1917": {
      "op": "SHL"
    },
    "1918": {
      "op": "SUB"
    },
    "1919": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "DUP7",
      "path": "8"
    },
    "1920": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "AND",
      "path": "8"
    },
    "1921": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7511
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1923": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1924": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1925": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1926": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1928": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1929": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1930": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1931": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1933": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1934": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1935": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1936": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7519
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1937": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1938": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7523
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x81F"
    },
    "1941": {
      "fn": "DummyERC20._transfer",
      "jump": "i",
      "offset": [
        7502,
        7573
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1942": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7502,
        7573
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "op": "SUB"
    },
    "1951": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1952": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1953": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "AND",
      "path": "8"
    },
    "1954": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7491
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1956": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1957": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1958": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1959": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1961": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1962": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1963": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1964": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1966": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1967": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1968": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7499
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1969": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7573
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1970": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7573
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1971": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7573
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1972": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7482,
        7573
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1973": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7626
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 25
    },
    "1974": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7626
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1975": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7626
      ],
      "op": "AND",
      "path": "8"
    },
    "1976": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7626
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1977": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7626
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1978": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7626
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1979": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7626
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1980": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7638
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7C5"
    },
    "1983": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7638
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1984": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7631,
        7637
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1985": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7630
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x573"
    },
    "1988": {
      "fn": "DummyERC20._transfer",
      "jump": "i",
      "offset": [
        7606,
        7638
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1989": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7606,
        7638
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "op": "SUB"
    },
    "1998": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1999": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2000": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "AND",
      "path": "8"
    },
    "2001": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7592
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2003": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2004": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2005": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2006": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2008": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2009": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2010": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2011": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2013": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2014": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2015": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2016": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2017": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7638
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "2018": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7638
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2019": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7638
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "2020": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7638
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2021": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 26
    },
    "2022": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2023": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2024": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2025": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2026": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2027": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2028": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2029": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7583,
        7603
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2030": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2031": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2032": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "AND",
      "path": "8"
    },
    "2033": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2034": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2067": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2068": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2069": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2070": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2071": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "SUB",
      "path": "8"
    },
    "2072": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "ADD",
      "path": "8"
    },
    "2073": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2074": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7653,
        7688
      ],
      "op": "LOG3",
      "path": "8"
    },
    "2075": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7165,
        7695
      ],
      "op": "POP",
      "path": "8"
    },
    "2076": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7165,
        7695
      ],
      "op": "POP",
      "path": "8"
    },
    "2077": {
      "fn": "DummyERC20._transfer",
      "offset": [
        7165,
        7695
      ],
      "op": "POP",
      "path": "8"
    },
    "2078": {
      "fn": "DummyERC20._transfer",
      "jump": "o",
      "offset": [
        7165,
        7695
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2079": {
      "fn": "SafeMath.sub",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2080": {
      "fn": "SafeMath.sub",
      "offset": [
        5518,
        5525
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2082": {
      "fn": "SafeMath.sub",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 27
    },
    "2083": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2084": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2085": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "GT",
      "path": "1"
    },
    "2086": {
      "branch": 34,
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2087": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8AE"
    },
    "2090": {
      "branch": 34,
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2091": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2093": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2102": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2103": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2105": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2106": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2107": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2108": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2110": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2111": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2112": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2113": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "2114": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2115": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2116": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2117": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2118": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2119": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2120": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2121": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2122": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2124": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2125": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2126": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2127": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2128": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2129": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2130": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2132": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2133": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2134": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2135": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2136": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2137": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2139": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2140": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2141": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2142": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "LT",
      "path": "1"
    },
    "2143": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2144": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x873"
    },
    "2147": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2148": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2149": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2150": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2151": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2152": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2153": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2154": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2155": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2156": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2158": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2159": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x85B"
    },
    "2162": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2163": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2164": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2165": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2166": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2167": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2168": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2169": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2170": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2171": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2172": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2173": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2174": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2176": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "1"
    },
    "2177": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2178": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2179": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A0"
    },
    "2182": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2183": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2184": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2185": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "2186": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2187": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2188": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2190": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2191": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2193": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "2194": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2197": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "EXP",
      "path": "1"
    },
    "2198": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "2199": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "NOT",
      "path": "1"
    },
    "2200": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "1"
    },
    "2201": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2202": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2203": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2205": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2206": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2207": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2208": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2209": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2210": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2211": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2212": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2213": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "2214": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2216": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2217": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2218": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2219": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "2220": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2221": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2222": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2223": {
      "op": "POP"
    },
    "2224": {
      "op": "POP"
    },
    "2225": {
      "op": "POP"
    },
    "2226": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 28
    },
    "2227": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SUB",
      "path": "1"
    },
    "2228": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2229": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2230": {
      "fn": "DummyERC20._beforeTokenTransfer",
      "offset": [
        10835,
        10927
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2231": {
      "fn": "DummyERC20._beforeTokenTransfer",
      "offset": [
        10835,
        10927
      ],
      "op": "POP",
      "path": "8"
    },
    "2232": {
      "fn": "DummyERC20._beforeTokenTransfer",
      "offset": [
        10835,
        10927
      ],
      "op": "POP",
      "path": "8"
    },
    "2233": {
      "fn": "DummyERC20._beforeTokenTransfer",
      "offset": [
        10835,
        10927
      ],
      "op": "POP",
      "path": "8"
    },
    "2234": {
      "fn": "DummyERC20._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        10835,
        10927
      ],
      "op": "JUMP",
      "path": "8"
    }
  },
  "sha1": "0436183a852b1d73219003e49281743e98d8fe6d",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol\";\nimport \"interfaces/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract DummyERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n        _mint(msg.sender,10000000);\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}",
  "sourceMap": "1414:9515:8:-:0;;;2056:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2056:181:8;;;;;;;;;;-1:-1:-1;2056:181:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2056:181:8;;;;;;;;;;-1:-1:-1;2056:181:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2056:181:8;;-1:-1:-1;;2130:13:8;;;;-1:-1:-1;2130:5:8;;:13;;;;;:::i;:::-;-1:-1:-1;2153:17:8;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;2180:9:8;:14;;-1:-1:-1;;2180:14:8;2192:2;2180:14;;;2204:26;2210:10;2221:8;2204:5;:26::i;:::-;2056:181;;1414:9515;;7966:370;-1:-1:-1;;;;;8049:21:8;;8041:65;;;;;-1:-1:-1;;;8041:65:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;8117:49;8146:1;8150:7;8159:6;8117:20;:49::i;:::-;8192:24;8209:6;8192:12;;:16;;;;;;:24;;;;:::i;:::-;8177:12;:39;-1:-1:-1;;;;;8247:18:8;;:9;:18;;;;;;;;;;;;:30;;8270:6;;8247:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8226:18:8;;:9;:18;;;;;;;;;;;:51;;;;8292:37;;;;;;;8226:18;;:9;;8292:37;;;;;;;;;;7966:370;;:::o;10835:92::-;;;;:::o;2690:175:1:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:1:o;1414:9515:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1414:9515:8;;;-1:-1:-1;1414:9515:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/DummyERC20.sol",
  "type": "contract"
}